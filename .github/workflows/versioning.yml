name: Versioning

on:
  workflow_call:
    inputs:
      branch:
        description: 'The branch where the versioning will be executed'
        type: string
        required: false
        default: 'main'
      majorList:
        description: 'List of the nouns that will be considered as major version'
        type: string
        required: false
        default: 'BREAKING CHANGE, BREAKING, MAJOR'
      minorList:
        description: 'List of the nouns that will be considered as minor version'
        type: string
        required: false
        default: 'FEATURE, Feature, feature, FEAT, Feat, feat'
      patchList:
        description: 'List of the nouns that will be considered as patch version'
        type: string
        required: false
        default: 'FIX, Fix, fix, FIXED, Fixed, fixed, Refactor, Refact, Refac, refac, refact, refactor, REFAC, REFACT, REFACTOR, refacs, refacts, refactors, REFACS, REFACTS, REFACTORS, config, conf, configs, confs, cofiguration, cofigurations, configure, doc, docs, docu, document, documentation, dependencies, dependencie, depends, depend, deps, dep, chore, build, rebuild, build(deps), build(deps-dev), ci, CI, test, tests, testing, wip, WIP, Wip'
    secrets:
      github-token:
        description: 'The Github token'
        required: true
    outputs:
      current:
        description: 'The current version'
        value: ${{ jobs.versioning.outputs.current }}
      next-patch:
        description: 'The next version with format v0.0.0'
        value: ${{ jobs.versioning.outputs.next-patch }}
      next-minor:
        description: 'The minor version with format v0.0'
        value: ${{ jobs.versioning.outputs.next-minor }}
      next-major:
        description: 'The major version with format v0'
        value: ${{ jobs.versioning.outputs.next-major }}

env:
  GH_TOKEN: ${{ secrets.github-token || secrets.GITHUB_TOKEN }}

jobs:
  versioning:
    name: Versioning
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      current: ${{ steps.semver.outputs.current }}
      next-patch: ${{ steps.semver.outputs.next }}
      next-minor: ${{ steps.push.outputs.minor }}
      next-major: ${{ steps.push.outputs.major }}
    steps:
      - name: Set up repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
          token: ${{ secrets.github-token || secrets.GITHUB_TOKEN }}

      - name: Get next version
        id: semver
        uses: ietf-tools/semver-action@v1
        with:
          token: ${{ secrets.github-token || secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.inputs.branch || 'main' }}
          majorList: ${{ github.event.inputs.majorList || 'BREAKING CHANGE, BREAKING, MAJOR' }}
          minorList: ${{ github.event.inputs.minorList || 'FEATURE, Feature, feature, FEAT, Feat, feat' }}
          patchList: ${{ github.event.inputs.patchList || 'FIX, Fix, fix, FIXED, Fixed, fixed, Refactor, Refact, Refac, refac, refact, refactor, REFAC, REFACT, REFACTOR, refacs, refacts, refactors, REFACS, REFACTS, REFACTORS, config, conf, configs, confs, cofiguration, cofigurations, configure, doc, docs, docu, document, documentation, dependencies, dependencie, depends, depend, deps, dep, chore, build, rebuild, build(deps), build(deps-dev), ci, CI, test, tests, testing, wip, WIP, Wip' }}
          patchAll: false

      - name: Push tags
        id: push
        run: |
          #!/bin/sh
          # Get minor tag
          minor=$(echo ${{ steps.semver.outputs.next }} | sed 's/.[0-9]\{1,\}$//')
          # Get major tag
          major=$(echo ${{ steps.semver.outputs.next }} | sed 's/.[0-9]\{1,\}.[0-9]\{1,\}$//')

          # Set new tags and force update
          git tag ${{ steps.semver.outputs.next }}
          git tag --force $minor
          git tag --force $major

          # Push new tag forcing the update of the minor and major tag
          git push --tag --force

          # output major and minor tags
          echo "major=$major" >> $GITHUB_OUTPUT
          echo "minor=$minor" >> $GITHUB_OUTPUT
